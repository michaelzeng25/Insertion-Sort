1 TO 3 ARE VERY EASY

4, 
SELECT company, num, COUNT(*)
FROM route WHERE stop=149 OR stop=53
GROUP BY company, num
HAVING COUNT(*)>1;


5,
SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b 
ON (a.company=b.company AND a.num=b.num)
WHERE a.stop=53 and b.stop=149;

For company and num, using either a or b or mixed does not matter. 
this looks like the constructor overloading in programming



6,
SELECT a.company, a.num, stopa.name, stopb.name
FROM route a 
JOIN route b ON (a.company=b.company AND a.num=b.num)
JOIN stops stopa ON (a.stop=stopa.id)
JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart'AND stopb.name='London Road';

triple join. a.stop=stopa.id means to match the id on the two tables where id and stop contains the same numbers.

7, similar to 6
select distinct a.company, a.num
from route a
join route b on a.company=b.company and a.num=b.num
join stops c on c.id=a.stop
join stops d on d.id=b.stop
where c.name='Haymarket' and d.name='Leith'

8, also similar
select a.company, a.num
from route a
join route b on a.company=b.company and a.num=b.num
join stops c on c.id=a.stop
join stops d on d.id=b.stop
where c.name='Craiglockhart' and d.name='Tollcross'

9, 
select distinct c.name, a.company, a.num
from route a
join route b on a.company=b.company and a.num=b.num
join stops c on c.id=a.stop
join stops d  on d.id=b.stop
where d.name= 'Craiglockhart';

#distinct c.name and where d.name, or distinct d.name and where c.name. cant be the same. 

10,
select distinct t1.num, t1.company, a.name, t2.num, t2.company
from
	(
	select a.num, a.company, b.stop
	from route a join route b on (a.company=b.company AND a.num=b.num)
	where a.stop =  (select id from stops where name = 'Craiglockhart')
	) t1
join
	(
	select a.num, a.company, b.stop
	from route a join route b on (a.company=b.company AND a.num=b.num)
	where a.stop = (select id from stops where name = 'Sighthill')
	) t2 
on t1.stop = t2.stop
join stops a on a.id = t1.stop

Explanation:
Find all the stops that can tranfer to either A or B.

The first subquery return all the stops of the busses(num+company) which passengers can transfer to A
The second subquery return those that can transfer to B
then these 2 tables are joined by the stops that can transfer to both A or B
In the end, join the stops table to get the name of those stops.

The result table will contain the name of the first bus and second bus, and the name of the stop the passengers can transfer to
stop A or B.
